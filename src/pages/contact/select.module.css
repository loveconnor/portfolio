.container {
    --inputFontSize: calc((16 / 16) * 1rem);
    --inputFocusColor: rgb(var(--rgbPrimary));
    --inputUnderlineColor: rgb(var(--rgbText) / 0.2);
  
    position: relative;
    display: flex;
    flex-direction: column;
  
    &[data-error='true'] {
      --inputUnderlineColor: rgb(var(--rgbError));
    }
  }
  
  .content {
    position: relative;
    display: flex;
  }

.input {
    display: block;
    width: 100%;
    padding: 10px;
    font-size: 16px;
    line-height: 1.5;
    color: rgb(var(--rgbText));
    background-color: rgb(var(--rgbBackgroundLight));
    background-clip: padding-box;
    
    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
  

  }
  
  .input:focus {
    border-color: rgb(var(--rgbAccent));
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgb(var(--rgbAccent) / 0.25);
  }
  
  .input:hover {
    border-color: rgb(var(--rgbAccent));
  }

  .underline {
    background: var(--inputFocusColor);
    transform: scale3d(0, 1, 1);
    width: 100%;
    height: 2px;
    position: absolute;
    bottom: 0;
    transform-origin: left;
  
    @media (--mediaUseMotion) {
      transition: transform var(--durationM) var(--bezierFastoutSlowin);
    }
  
    &[data-focused='true'] {
      transform: scale3d(1, 1, 1);
    }
  }
  
  .label {
    color: rgb(var(--rgbText) / 0.8);
    position: absolute;
    top: var(--spaceL);
    left: 0;
    display: block;
    cursor: text;
    transform-origin: top left;
    transition: color var(--durationM) ease;
  
    @media (--mediaUseMotion) {
      transition: transform var(--durationM) var(--bezierFastoutSlowin),
        color var(--durationM) ease;
    }
  
    &[data-filled='true'],
    &[data-focused='true'] {
      color: rgb(var(--rgbText) / 0.54);
      transform: scale(0.8) translateY(calc(var(--spaceL) * -1));
    }
  }
  
  .error {
    transition-property: opacity;
    transition-duration: var(--durationM);
    transition-timing-function: var(--bezierFastoutSlowin);
    height: var(--height);
    opacity: 0;
  
    @media (--mediaUseMotion) {
      transition-property: height, opacity;
    }
  
    &[data-visible='true'] {
      opacity: 1;
    }
  }
  
  .errorMessage {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    gap: var(--spaceXS);
    padding-top: var(--spaceS);
    color: rgb(var(--rgbError));
  }
  